{"version":3,"sources":["globalStyles.js","components/AnimeList/styles.js","components/SearchAnimes/styles.js","context/index.js","components/SearchAnimes/index.js","components/AnimeList/Anime/styles.js","components/AnimeList/Anime/index.js","components/AnimeList/index.js","components/MenuCategories/styles.js","components/MenuCategories/index.js","components/Loading/styles.js","components/Loading/index.js","components/FeatureAnime/styles.js","components/FeatureAnime/index.js","components/Hero/styles.js","components/Hero/index.js","pages/Home/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","menuFixed","AnimeArea","Message","h2","SearchArea","section","SearchForm","form","Input","input","button","AppContext","React","createContext","AppProvider","children","useState","animes","setAnimes","searchAnime","setSearchAnime","loading","setLoading","fetchAnimes","useCallback","a","fetch","response","json","dataAnime","data","documents","newAnimes","map","item","id","anilist_id","image","cover_image","titles","idanime","genres","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchAnime","searchValue","useRef","onSubmit","s","preventDefault","type","ref","onKeyPress","event","key","current","Card","CardImage","img","Title","Anime","src","alt","en","AnimeList","color","height","width","length","nav","h1","Wrapper","CategoryLink","MenuCategories","categories","filterAnime","index","onClick","Area","Load","Loading","allCategories","FeatureAnime","query","URLSearchParams","useLocation","search","menufixed","setMenuFixed","menuItems","setMenuItems","scrollListener","window","scrollY","addEventListener","removeEventListener","newGenres","filtro","i","filter","j","push","get","FeaturedVertical","FeaturedHorizontal","Info","Description","Year","h3","Points","Seasons","Hero","anime","setAnime","loadingPage","setLoadingPage","banner_image","score","descriptions","season_period","season_year","cover","seasons","year","style","backgroundImage","dangerouslySetInnerHTML","__html","undefined","Home","App","basename","process","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e5c355b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Lora', serif;;\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 77vw;\r\n    height: auto;\r\n    min-height: 50vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #050303;\r\n    padding: 2rem;\r\n    margin-left: ${({ menuFixed }) => (menuFixed ? '23vw': '0')};\r\n   \r\n    @media screen and (max-width: 900px){\r\n        width: 100%;\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nexport const AnimeArea = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Message = styled.h2`\r\n    font-size: 1.5rem;\r\n    text-transform: capitalize;\r\n    text-align: center;\r\n    color: #FFF;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SearchArea = styled.section`\r\n   display: flex;\r\n   align-items: center;\r\n`;\r\n\r\nexport const SearchForm =styled.form`\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    text-transform: capitalize;\r\n    border-radius: 0.25rem;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\n\r\nexport const SearchTitle = styled.h2`\r\n    font-size: 1.1rem;\r\n    color: #FFFFFF;\r\n    margin-right: 0.5rem;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 40vw;\r\n    border: 1px;\r\n    color: #FFFFFF;\r\n    background: #363636;\r\n    border-radius: 0.25rem;\r\n    padding: 0.5rem;\r\n    font-size: 1.1rem;    \r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width:100px;\r\n    height:30px;\r\n    cursor: pointer;\r\n`;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nconst url = \"https://api.aniapi.com/v1/anime?title=\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [animes, setAnimes] = useState([]);\r\n  const [searchAnime, setSearchAnime] = useState('a');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchAnimes = useCallback(async () => {\r\n    setLoading(true);\r\n    setAnimes([]);\r\n    try {\r\n      const response = await fetch(`${url}${searchAnime}`);\r\n      const dataAnime = await response.json();\r\n      setLoading(false);\r\n      const { data } = dataAnime;\r\n      const { documents } = data;\r\n\r\n      if (documents) {\r\n        const newAnimes = documents.map((item) => {\r\n          const { anilist_id, cover_image, titles, id, genres } = item;\r\n          return {\r\n            id: anilist_id,\r\n            image: cover_image,\r\n            titles: titles,\r\n            idanime: id,\r\n            genres: genres,\r\n          }\r\n        })\r\n        setAnimes(newAnimes);\r\n      } else {\r\n        setAnimes([]);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [searchAnime]);\r\n\r\n  useEffect(() => {\r\n    fetchAnimes();\r\n  }, [searchAnime, fetchAnimes]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        animes,\r\n        loading,\r\n        setSearchAnime,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };","import React, { useRef } from \"react\";\r\nimport {\r\n    SearchArea,\r\n    SearchForm,\r\n    Button,\r\n    Input\r\n} from './styles';\r\nimport { useGlobalContext } from '../../context/index';\r\n\r\nconst SearchAnime = () => {\r\n    const { setSearchAnime } = useGlobalContext();\r\n\r\n    const searchValue = useRef('');\r\n\r\n    const search = (event) => {\r\n        if (event.key === 'Enter') {\r\n\r\n            setSearchAnime(searchValue.current.value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (s) => {\r\n        s.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <SearchArea>\r\n            <SearchForm onSubmit={handleSubmit}>\r\n                <Input\r\n                    type='text'\r\n                    id='name'\r\n                    ref={searchValue}\r\n                    onKeyPress={search}\r\n                />\r\n            </SearchForm>\r\n        </SearchArea>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchAnime;","import styled from \"styled-components\";\r\n\r\nexport const Card = styled.div`\r\n    width: 165px;\r\n    height: 300px;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    transform: scale(0.9);\r\n    transition: all ease 0.2s;\r\n\r\n    &:hover{\r\n      transform: scale(1);\r\n    }\r\n`;\r\n\r\nexport const CardImage = styled.img`\r\n    width: 100%;\r\n    height: 250px;\r\n`;\r\n\r\nexport const Title = styled.h2` \r\n  font-size: 16px;\r\n  letter-spacing: 1px;\r\n  color: #FFF;\r\n\r\n  @media screen and (max-width: 900px){\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Card, CardImage, Title } from \"./styles\";\r\n\r\n//alterei a forma como recebe os parametros do componente pai\r\n//const Anime = ({ id, image, titles }) => {\r\n\r\nconst Anime = ({ data }) => {\r\n\r\n  //então inseri os dados nos componentes, puxando a partir de 'data'\r\n\r\n  return (\r\n    //observa que aqui, qdo puxo o title, eu puxo tbm do atributo que tá dentro dele (tem titulo em ingles e em japones)\r\n    <Card>\r\n      <CardImage src={data.image} alt={data.id} />\r\n      <Title>{data.titles.en}</Title>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","import React from \"react\";\r\nimport { Container, AnimeArea, Message } from \"./styles\";\r\nimport SearchAnime from '../SearchAnimes';\r\nimport Anime from \"./Anime\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst AnimeList = ({ animes, menuFixed }) => {\r\n\r\n  const { loading } = useGlobalContext();\r\n\r\n  return (\r\n    <Container menuFixed={menuFixed}>\r\n\r\n      <SearchAnime />\r\n      {loading ?\r\n        <ReactLoading type={'spin'} color={'#FFFFFF'} height={'8%'} width={'8%'} />\r\n        :\r\n        animes.length < 1 &&\r\n        <Message>Nenhum anime foi encontrado!</Message>\r\n      }\r\n      <AnimeArea>\r\n        {animes.map((item) => {\r\n          return (\r\n            <Anime key={item.id} data={item} />\r\n          );\r\n        })}\r\n      </AnimeArea>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AnimeList;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.nav`\r\n    width: 23vw;\r\n    height: 100vw;\r\n    top: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #050303;\r\n    padding: 4.5rem;\r\n    position: ${({ menuFixed }) => (menuFixed ? 'fixed' : 'relative')};\r\n\r\n    @media screen and (max-width: 1200px){\r\n        width: 23vw;\r\n    }\r\n\r\n    @media screen and (max-width: 900px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n    color: #FFF;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1.5rem;\r\n`;\r\n\r\nexport const CategoryLink = styled.button`\r\n    font-size: 1.2rem;\r\n    font-weight: 100;\r\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n    background-color: #363636;\r\n    color: #FFF;\r\n    width: 12rem;\r\n    height: 2.5rem;\r\n    margin: 0.3rem 0;\r\n    cursor: pointer;\r\n`;","import React from \"react\";\r\nimport {\r\n    Container,\r\n    Title,\r\n    Wrapper,\r\n    CategoryLink,\r\n} from './styles';\r\n\r\nconst MenuCategories = ({ categories, menuFixed, filterAnime }) => {\r\n\r\n    return (\r\n        <Container menuFixed={menuFixed}>\r\n            <Title>Categorias</Title>\r\n            <Wrapper>\r\n                {\r\n                    categories.map((item, index) => {\r\n                        return (\r\n                            <CategoryLink\r\n                                key={index}\r\n                                onClick={() => filterAnime(item)}\r\n                            >{item}\r\n                            </CategoryLink>\r\n                        )\r\n                    })\r\n                }\r\n            </Wrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MenuCategories;","import styled from 'styled-components';\r\n\r\nexport const Area = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 99;\r\n    background: #000;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nexport const Load = styled.div`\r\n    -webkit-animation: load1 1s infinite ease-in-out;\r\n    animation: load1 1s infinite  ease-in-out;\r\n    width: 1em;\r\n    height: 4em;\r\n    color: #999;\r\n    margin-top: 20rem;\r\n    font-size: 3rem;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n    -webkit-animation-delay: -0.16s;\r\n    animation-delay: -0.16s;  \r\n\r\n    &::before{\r\n        background: transparent;\r\n        -webkit-animation: load1 1s infinite ease-in-out;\r\n        animation: load1 1s infinite  ease-in-out;\r\n        width: 1em;\r\n        height: 4em;\r\n        position: absolute;\r\n        content: '';\r\n        left: -1.5em;\r\n        -webkit-animation-delay:-0.32s;\r\n        animation-delay: -0.32s;\r\n      \r\n\r\n    }\r\n    &::after{\r\n        -webkit-animation: load1 1s infinite ease-in-out;\r\n        animation: load1 1s infinite  ease-in-out;\r\n        width: 1em;\r\n        height: 4em;\r\n        position: absolute;\r\n        content: '';\r\n        left: 1.5em;\r\n    }\r\n\r\n@-webkit-keyframes load1{\r\n    0%,\r\n    80%,\r\n    100% {\r\n        box-shadow:0 0;\r\n        height: 4em;\r\n    }\r\n\r\n    40% {\r\n        box-shadow:0 -2em;\r\n        height: 5em;\r\n    }\r\n}   \r\n\r\n@keyframes load1{\r\n    0%,\r\n    80%,\r\n    100% {\r\n        box-shadow:0 0;\r\n        height: 4em;\r\n    }\r\n\r\n    40%{\r\n        box-shadow:0 -2em;\r\n        height: 5em;\r\n    }\r\n}\r\n`;","import React from 'react';\r\nimport { Area, Load } from './styles';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Area>\r\n            <Load />\r\n        </Area>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    height: auto;\r\n    min-height: 100vh;\r\n    display: flex;\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport AnimeList from \"../AnimeList\";\r\nimport MenuCategories from \"../MenuCategories\";\r\nimport Loading from \"../Loading\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport { Container } from \"./styles\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst allCategories = [\r\n    \"Todos\",\r\n    \"Comedy\",\r\n    \"Action\",\r\n    \"Mahou Shoujo\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Thriller\",\r\n    \"Alternate Universe\",\r\n    \"Anti-Hero\",\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\nconst FeatureAnime = () => {\r\n    let query = useQuery();\r\n    const { animes } = useGlobalContext();\r\n    const [categories, setCategories] = useState(allCategories);\r\n    const [menufixed, setMenuFixed] = useState(false);\r\n    const [menuItems, setMenuItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMenuItems(animes);\r\n    }, [animes]);\r\n\r\n    useEffect(() => {\r\n        const scrollListener = () => {\r\n            if (window.scrollY > 438) {\r\n                setMenuFixed(true);\r\n            } else {\r\n                setMenuFixed(false);\r\n            }\r\n        };\r\n        window.addEventListener(\"scroll\", scrollListener);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", scrollListener);\r\n        };\r\n    }, []);\r\n\r\n    const filterAnime = (a) => {\r\n        setMenuItems([]);\r\n        if (a === \"Todos\") {\r\n            setMenuItems(animes);\r\n            return;\r\n        }\r\n        const newGenres = [...animes];\r\n         \r\n        let filtro = [];\r\n       \r\n        for (let i in newGenres) {\r\n            const filter = newGenres[i].genres;\r\n            for (let j in filter) {\r\n                if (filter[j] === a) {\r\n                    filtro.push(newGenres[i]);\r\n                }\r\n            }\r\n        }\r\n        setMenuItems(filtro);\r\n    };\r\n\r\n    useEffect(() => {  \r\n        let a = query.get(\"genres\");\r\n        if (a != null) {\r\n            filterAnime(a);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <MenuCategories filterAnime={filterAnime} categories={categories} menuFixed={menufixed} />\r\n            <AnimeList animes={menuItems} menuFixed={menufixed}/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FeatureAnime;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  height: 68vh;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n\r\n  @media screen and (max-width: 760px){\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport const FeaturedVertical = styled.div`\r\n  width: inherit;\r\n  height:inherit;\r\n  background:  linear-gradient(to top, #050303 10%, transparent 90%);\r\n`;\r\n\r\nexport const FeaturedHorizontal = styled.div`\r\n  width: inherit;\r\n  height: inherit;\r\n  background: linear-gradient(to right,  #050303 30%, transparent 70%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 60px;\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n\r\n  @media screen and (max-width: 760px){\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  width: 25vw;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 150px);\r\n  font-size: 16px;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  gap: 1rem;\r\n\r\n  @media screen and (max-width: 760px){\r\n    grid-template-columns: repeat(3, 120px);\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  text-align: justify;\r\n  color:#999;\r\n  max-width: 50vw;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 5;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n\r\n  @media screen and (max-width: 760px){\r\n    font-size: 18px;\r\n    max-width: 70vw;\r\n  }  \r\n`;\r\n\r\nexport const Year = styled.h3`\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n  border: solid 1px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding:0.2rem ;\r\n`;\r\n\r\nexport const Points = styled.h3`\r\n  color: #46d369;\r\n  border: solid 1px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding:0.2rem ;\r\n`;\r\n\r\nexport const Seasons = styled.h3`\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n  border: solid 1px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding:0.2rem ;\r\n`;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport Loading from '../Loading';\r\nimport {\r\n    Container,\r\n    Title,\r\n    FeaturedVertical,\r\n    FeaturedHorizontal,\r\n    Description,\r\n    Info,\r\n    Year,\r\n    Seasons,\r\n    Points\r\n} from './styles';\r\n\r\nconst url = \"https://api.aniapi.com/v1/random/anime/50\";\r\n\r\nconst Hero = () => {\r\n\r\n    const [anime, setAnime] = useState([]);\r\n    const [loadingPage, setLoadingPage] = useState(false);\r\n\r\n    const fetchAnimes = useCallback(async () => {\r\n        setLoadingPage(true);\r\n        try {\r\n            const response = await fetch(`${url}`);\r\n            const dataAnime = await response.json();\r\n            const { data } = dataAnime;\r\n\r\n            if (data) {\r\n                data.map((item) => {\r\n                    const { anilist_id, banner_image, titles, cover_image, score, descriptions, season_period, season_year } = item;\r\n                    if (banner_image && descriptions.en) {\r\n                        setAnime([\r\n                            {\r\n                                id: anilist_id,\r\n                                titles: titles,\r\n                                image: banner_image,\r\n                                cover: cover_image,\r\n                                score: score,\r\n                                descriptions: descriptions,\r\n                                seasons: season_period,\r\n                                year: season_year,\r\n                            }]\r\n                        );\r\n                        return;\r\n                    }\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setLoadingPage(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchAnimes();\r\n    }, [fetchAnimes]);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            {\r\n                loadingPage ?\r\n                    <Loading />\r\n                    :\r\n                    anime.map((item) => {\r\n                        return (\r\n                            <Container style={{ backgroundImage: `url(${item.image})` }}>\r\n                                <FeaturedVertical>\r\n                                    <FeaturedHorizontal>\r\n                                        <Title>{item.titles.en}</Title>\r\n                                        <Description dangerouslySetInnerHTML={{__html: item.descriptions.en}}/>\r\n                                        <Info>\r\n                                            {\r\n                                                item.score !== undefined && item.score !== 0 &&\r\n                                                <Points>{item.score} Pontos</Points>\r\n                                            }\r\n                                            {\r\n                                                item.year !== undefined &&\r\n                                                <Year>{item.year}</Year>\r\n                                            }\r\n                                            {\r\n                                                item.seasons !== undefined && item.seasons !== 0 &&\r\n                                                <Seasons>{item.seasons} Temporada{item.seasons !== 1 ? 's' : ''}</Seasons>\r\n                                            }\r\n                                        </Info>\r\n                                    </FeaturedHorizontal>\r\n                                </FeaturedVertical>\r\n                            </Container>\r\n                        )\r\n                    })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport FeatureAnime from '../../components/FeatureAnime';\r\nimport Hero from '../../components/Hero';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <Hero />\r\n            <FeatureAnime />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { GlobalStyle } from './globalStyles';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <GlobalStyle />\r\n      <Routes>\r\n        <Route exact path='/' element={<Home />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { AppProvider } from './context';\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <App />\r\n    </AppProvider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}